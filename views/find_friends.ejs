<div style="width: 100%; height: 100vh; background-color: #2d2d2d;">
    <nav>
        <div class="comunity_nav">
            <div style="color: #ffffff; border-bottom: solid #747474 2px; cursor: default;" onclick="location.href='/friends';">나의 러닝메이트</div>
            <div style="cursor: default;" onclick="location.href='/course';">러닝 코스</div>
            <div style="cursor: default;" onclick="location.href='/community';">게시판</div>
        </div>
    </nav>
    <div style="font-size: 20px; font-weight: 600; color: #66FFE3; padding-left: 20px; margin-top: 20px; margin-bottom: 20px;">러닝메이트 찾기</div>
    <div style="margin: 15px 0px 30px 30px; display: flex; align-items: center;">
        <input id="searchInput" type="text" placeholder="이름 검색" style="width: 200px; height: 27px; padding-left: 10px; border-radius: 5px; border: 1px solid #646464; font-size: 13px; background-color: #646464;">
        <button onclick="searchByName()" style="margin-left: 10px; font-size: 13px; padding: 5px 10px; border-radius: 5px; background-color: #A4E3D8; border: none; cursor: pointer;">검색</button>
    </div>
    <div style="width: 326px; height: 419px; background-color: #646464; border-radius: 10px; margin: auto; padding: 15px 10px;">
        <div id="data-container" style="height: 400px; overflow-y: auto; padding: 10px;"></div>
    </div>
    <script>
        const itemsPerPage = 7;
        const totalItems = 52;
        let currentPage = 1;
        let searchQuery = "";
        let items = Array.from({ length: totalItems }, (_, i) => ({
            title: `이름 ${i + 1}`,
            content: `지역 ${i + 11}°`
        }));
        let filteredItems = [...items]; // 검색 및 필터링된 데이터

        function displayItems() {
            const start = (currentPage - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            const paginatedItems = filteredItems.slice(start, end);

            const container = document.getElementById("data-container");
            container.innerHTML = paginatedItems.map(item => `
                <div class="friendslist">
                    <div style="display: flex; justify-content: space-between;">
                        <div>${item.title}</div>
                        <div>${item.content}</div>
                    </div>
                </div>
            `).join('');
        }

        function searchByName() {
            const searchInput = document.getElementById("searchInput").value.trim();
            searchQuery = searchInput.toLowerCase();
            filteredItems = items.filter(item => item.title.toLowerCase().includes(searchQuery));
            currentPage = 1;
            displayItems();
        }

        function handleScroll() {
            const container = document.getElementById("data-container");
            if (container.scrollTop + container.clientHeight >= container.scrollHeight - 10) {
                if (currentPage <= Math.ceil(filteredItems.length / itemsPerPage)) {
                    currentPage++;
                    displayItems();
                }
            }
        }

        const container = document.getElementById("data-container");
        container.addEventListener("scroll", handleScroll);

        displayItems();
    </script>

</div>
