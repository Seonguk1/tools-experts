<div style="width: 100%; height: 844px; background-color: #2d2d2d;">
    <nav>
        <div class="comunity_nav">
            <div style="cursor: default;" onclick="location.href='/friends';">나의 러닝메이트</div>
            <div style="color: #ffffff; border-bottom: solid #747474 2px; cursor: default;" onclick="location.href='/course';">러닝 코스</div>
            <div style="cursor: default;" onclick="location.href='/community';">게시판</div>
        </div>
    </nav>
    <div style="display: flex; justify-content: space-between; padding-left: 20px; padding-right: 20px; padding-top: 30px; margin-bottom: 20px;">
        <div style="display: flex; gap: 5px;">
            <div style="font-size: 20px; font-weight: 600; color: #66FFE3">나의 러닝코스</div>
        </div>
    </div>
    <div id="data-container"></div>
    <div id="pagination"></div>
    <script>
        const itemsPerPage = 7;
        const totalItems = 52; // 예제에서는 총 52개의 항목이 있다고 가정
        const totalPages = Math.ceil(totalItems / itemsPerPage);
        let currentPage = 1;
        const pagesToShow = 10; // 한 번에 보이는 페이지 번호 수

        const items = Array.from({ length: totalItems }, (_, i) => ({
        title: `러닝코스 ${i+1}`,
        content: `반포한강공원 > 여의도`
        }));

        function displayItems(page) {
        const start = (page - 1) * itemsPerPage;
        const end = start + itemsPerPage;
        const paginatedItems = items.slice(start, end);

        const container = document.getElementById("data-container");
        container.innerHTML = paginatedItems.map(item => `
            <div class="myCurrentRecord">
                <div>${item.title}</div>
                <div style="background-color: #A4E3D84D; width: 148px; height: 31px; line-height: 31px; font-size: 15px; text-align: center; border-radius: 50px;">${item.content}</div>
            </div>
        `).join('');
        }

        function displayPagination() {
        const paginationContainer = document.getElementById("pagination");
        paginationContainer.innerHTML = '';

        const startPage = Math.floor((currentPage - 1) / pagesToShow) * pagesToShow + 1;
        const endPage = Math.min(startPage + pagesToShow - 1, totalPages);

        const prevButton = document.createElement("button");
        prevButton.textContent = '<';
        prevButton.className = currentPage === 1 ? 'disabled' : '';
        prevButton.disabled = currentPage === 1;
        prevButton.addEventListener("click", () => {
            if (currentPage > 1) {
            currentPage--;
            displayItems(currentPage);
            displayPagination();
            }
        });
        paginationContainer.appendChild(prevButton);

        for (let i = startPage; i <= endPage; i++) {
            const button = document.createElement("button");
            button.textContent = i;
            if (i === currentPage) {
            button.style.fontWeight = 'bold';
            }
            button.addEventListener("click", () => {
            currentPage = i;
            displayItems(currentPage);
            displayPagination();
            });
            paginationContainer.appendChild(button);
        }

        const nextButton = document.createElement("button");
        nextButton.textContent = '>';
        nextButton.className = currentPage === totalPages ? 'disabled' : '';
        nextButton.disabled = currentPage === totalPages;
        nextButton.addEventListener("click", () => {
            if (currentPage < totalPages) {
            currentPage++;
            displayItems(currentPage);
            displayPagination();
            }
        });
        paginationContainer.appendChild(nextButton);
        }

        displayPagination();
        displayItems(currentPage);
    </script>
</div>